diff -uprN a/configure b/configure
--- a/configure	2020-12-21 10:10:42.000000000 +0900
+++ b/configure	2022-10-02 18:34:50.342966000 +0900
@@ -4671,9 +4671,9 @@ if test "${enable_static+set}" = set; th
   enableval=$enable_static; p=${PACKAGE-default}
     case $enableval in
     yes) enable_static=yes ;;
-    no) enable_static=no ;;
+    no) enable_static=yes ;;
     *)
-     enable_static=no
+     enable_static=yes
       # Look at the argument we got.  We use all the common list separators.
       lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
@@ -4686,7 +4686,7 @@ if test "${enable_static+set}" = set; th
       ;;
     esac
 else
-  enable_static=no
+  enable_static=yes
 fi
 
 
@@ -5255,15 +5255,15 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 if test "$os_win32" = "yes"; then
   if test x$enable_static = xyes -o x$enable_static = x; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Disabling static library build, must build as DLL on Windows." >&5
-$as_echo "$as_me: WARNING: Disabling static library build, must build as DLL on Windows." >&2;}
-    enable_static=no
+    { $as_echo "(disabled warning)" >&5
+$as_echo "(disabled warning)" >&2;}
+    enable_static=yes
   fi
   if test x$enable_shared = xno; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Enabling shared library build, must build as DLL on Windows." >&5
-$as_echo "$as_me: WARNING: Enabling shared library build, must build as DLL on Windows." >&2;}
+    { $as_echo "(disabled warning)" >&5
+$as_echo "(disabled warning)" >&2;}
   fi
-  enable_shared=yes
+  enable_shared=no
 fi
 
 enable_win32_dll=yes
@@ -9287,7 +9287,7 @@ func_stripname_cnf ()
 if test "${enable_shared+set}" = set; then :
   enableval=$enable_shared; p=${PACKAGE-default}
     case $enableval in
-    yes) enable_shared=yes ;;
+    yes) enable_shared=no ;;
     no) enable_shared=no ;;
     *)
       enable_shared=no
@@ -9296,14 +9296,14 @@ if test "${enable_shared+set}" = set; th
       for pkg in $enableval; do
 	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
-	  enable_shared=yes
+	  enable_shared=no
 	fi
       done
       IFS=$lt_save_ifs
       ;;
     esac
 else
-  enable_shared=yes
+  enable_shared=no
 fi
 
 
@@ -13477,7 +13477,7 @@ $as_echo_n "checking whether to build sh
   # are all built from PIC.
   case $host_os in
   aix3*)
-    test yes = "$enable_shared" && enable_static=no
+    test yes = "$enable_shared" && enable_static=yes
     if test -n "$RANLIB"; then
       archive_cmds="$archive_cmds~\$RANLIB \$lib"
       postinstall_cmds='$RANLIB $lib'
@@ -13489,7 +13489,7 @@ $as_echo_n "checking whether to build sh
       case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
       yes,aix,yes) ;;			# shared object as lib.so file only
       yes,svr4,*) ;;			# shared object as lib.so archive member only
-      yes,*) enable_static=no ;;	# shared object in lib.a archive as well
+      yes,*) enable_static=yes ;;	# shared object in lib.a archive as well
       esac
     fi
     ;;
@@ -24276,7 +24276,7 @@ fi
 fi
 
 if test "x$gdktarget" = "xwin32"; then
-  GDK_EXTRA_LIBS="$GDK_EXTRA_LIBS -lgdi32 -limm32 -lshell32 -lole32 -Wl,-luuid"
+  GDK_EXTRA_LIBS="$GDK_EXTRA_LIBS -lgdi32 -limm32 -lshell32 -lole32 -luuid"
    if true; then
   USE_WIN32_TRUE=
   USE_WIN32_FALSE='#'
@@ -24508,9 +24508,9 @@ fi
 CFLAGS="$saved_cflags"
 LDFLAGS="$saved_ldflags"
 
-# Pull in gio-unix for GDesktopAppInfo usage, see at least gdkapplaunchcontext-x11.c
+# Pull in gio for GDesktopAppInfo usage, see at least gdkapplaunchcontext-x11.c
 if test "x$gdktarget" = "xx11"; then
-  GDK_PACKAGES="$PANGO_PACKAGES gio-unix-2.0 $X_PACKAGES gdk-pixbuf-2.0 cairo-$cairo_backend"
+  GDK_PACKAGES="$PANGO_PACKAGES gio-2.0 $X_PACKAGES gdk-pixbuf-2.0 cairo-$cairo_backend"
 else
   GDK_PACKAGES="$PANGO_PACKAGES gio-2.0 gdk-pixbuf-2.0 cairo-$cairo_backend"
 fi
diff -uprN a/demos/Makefile.in b/demos/Makefile.in
--- a/demos/Makefile.in	2020-12-21 10:10:40.000000000 +0900
+++ b/demos/Makefile.in	2022-10-02 18:29:00.219672000 +0900
@@ -536,7 +536,7 @@ LDADDS = \
 	$(GTK_DEP_LIBS)							\
 	$(MATH_LIB)
 
-BUILT_SOURCES = test-inline-pixbufs.h
+BUILT_SOURCES = 
 testpixbuf_DEPENDENCIES = $(DEPS)
 testpixbuf_drawable_DEPENDENCIES = $(DEPS)
 testpixbuf_save_DEPENDENCIES = $(DEPS)
diff -uprN a/gdk/gdk.h b/gdk/gdk.h
--- a/gdk/gdk.h	2020-12-18 14:29:39.000000000 +0900
+++ b/gdk/gdk.h	2022-10-02 18:37:32.711750800 +0900
@@ -186,11 +186,11 @@ void gdk_notify_startup_complete_with_id
  */
 
 #if !defined (GDK_DISABLE_DEPRECATED) || defined (GDK_COMPILATION)
-GDKVAR GMutex *gdk_threads_mutex; /* private */
+extern GMutex *gdk_threads_mutex; /* private */
 #endif
 
-GDKVAR GCallback gdk_threads_lock;
-GDKVAR GCallback gdk_threads_unlock;
+extern GCallback gdk_threads_lock;
+extern GCallback gdk_threads_unlock;
 
 void     gdk_threads_enter                    (void);
 void     gdk_threads_leave                    (void);
diff -uprN a/gdk/gdktypes.h b/gdk/gdktypes.h
--- a/gdk/gdktypes.h	2020-12-18 14:50:58.000000000 +0900
+++ b/gdk/gdktypes.h	2022-10-02 18:22:40.801882600 +0900
@@ -39,9 +39,9 @@
 
 #ifdef G_OS_WIN32
 #  ifdef GDK_COMPILATION
-#    define GDKVAR extern __declspec(dllexport)
+#    define GDKVAR extern
 #  else
-#    define GDKVAR extern __declspec(dllimport)
+#    define GDKVAR extern
 #  endif
 #else
 #  define GDKVAR extern
diff -uprN a/gdk/win32/gdkmain-win32.c b/gdk/win32/gdkmain-win32.c
--- a/gdk/win32/gdkmain-win32.c	2020-12-18 14:29:39.000000000 +0900
+++ b/gdk/win32/gdkmain-win32.c	2022-10-02 18:18:30.845821600 +0900
@@ -65,7 +65,7 @@ const GOptionEntry _gdk_windowing_args[]
 };
 
 int __stdcall
-DllMain (HINSTANCE hinstDLL,
+gdk_DllMain (HINSTANCE hinstDLL,
 	 DWORD     dwReason,
 	 LPVOID    reserved)
 {
diff -uprN a/gtk/gtkdebug.h b/gtk/gtkdebug.h
--- a/gtk/gtkdebug.h	2020-12-18 14:50:58.000000000 +0900
+++ b/gtk/gtkdebug.h	2022-10-02 18:38:23.539906300 +0900
@@ -64,15 +64,15 @@ typedef enum {
 
 #ifdef G_OS_WIN32
 #  ifdef GTK_COMPILATION
-#    define GTKVAR extern __declspec(dllexport)
+#    define GTKVAR extern
 #  else
-#    define GTKVAR extern __declspec(dllimport)
+#    define GTKVAR extern
 #  endif
 #else
 #  define GTKVAR extern
 #endif
 
-GTKVAR guint gtk_debug_flags;
+extern guint gtk_debug_flags;
 
 G_END_DECLS
 
diff -uprN a/gtk/gtkmain.c b/gtk/gtkmain.c
--- a/gtk/gtkmain.c	2020-12-18 14:29:40.000000000 +0900
+++ b/gtk/gtkmain.c	2022-10-02 18:19:15.218780500 +0900
@@ -74,7 +74,7 @@
 static HMODULE gtk_dll;
 
 BOOL WINAPI
-DllMain (HINSTANCE hinstDLL,
+gtk_DllMain (HINSTANCE hinstDLL,
 	 DWORD     fdwReason,
 	 LPVOID    lpvReserved)
 {
diff -uprN a/gtk/gtkmain.h b/gtk/gtkmain.h
--- a/gtk/gtkmain.h	2020-12-18 14:50:58.000000000 +0900
+++ b/gtk/gtkmain.h	2022-10-02 18:39:15.036863600 +0900
@@ -67,19 +67,19 @@ typedef gint	(*GtkKeySnoopFunc)	    (Gtk
  */
 #ifdef G_PLATFORM_WIN32
 #ifdef GTK_COMPILATION
-#define GTKMAIN_C_VAR extern __declspec(dllexport)
+#define GTKMAIN_C_VAR extern
 #else
-#define GTKMAIN_C_VAR extern __declspec(dllimport)
+#define GTKMAIN_C_VAR extern
 #endif
 #else
 #define GTKMAIN_C_VAR extern
 #endif
 
-GTKMAIN_C_VAR const guint gtk_major_version;
-GTKMAIN_C_VAR const guint gtk_minor_version;
-GTKMAIN_C_VAR const guint gtk_micro_version;
-GTKMAIN_C_VAR const guint gtk_binary_age;
-GTKMAIN_C_VAR const guint gtk_interface_age;
+extern const guint gtk_major_version;
+extern const guint gtk_minor_version;
+extern const guint gtk_micro_version;
+extern const guint gtk_binary_age;
+extern const guint gtk_interface_age;
 const gchar* gtk_check_version (guint	required_major,
 			        guint	required_minor,
 			        guint	required_micro);
diff -uprN a/gtk/gtktexttypes.h b/gtk/gtktexttypes.h
--- a/gtk/gtktexttypes.h	2020-12-18 14:50:58.000000000 +0900
+++ b/gtk/gtktexttypes.h	2022-10-02 18:40:22.360926800 +0900
@@ -44,9 +44,9 @@ typedef struct _GtkTextMarkBody GtkTextM
 
 #ifdef G_OS_WIN32
 #ifdef GTK_COMPILATION
-#define VARIABLE extern __declspec(dllexport)
+#define VARIABLE extern
 #else
-#define VARIABLE extern __declspec(dllimport)
+#define VARIABLE extern
 #endif
 #else
 #define VARIABLE extern
@@ -70,7 +70,7 @@ extern const GtkTextLineSegmentClass gtk
  */
 
 #define GTK_TEXT_UNKNOWN_CHAR 0xFFFC
-VARIABLE const gchar gtk_text_unknown_char_utf8[];
+extern const gchar gtk_text_unknown_char_utf8[];
 
 gboolean gtk_text_byte_begins_utf8_char (const gchar *byte);
 
diff -uprN a/gtk/Makefile.in b/gtk/Makefile.in
--- a/gtk/Makefile.in	2020-12-21 10:10:41.000000000 +0900
+++ b/gtk/Makefile.in	2022-10-02 18:28:05.082542000 +0900
@@ -7518,7 +7518,7 @@ stamp-icons: $(STOCK_ICONS)
 	) done 								\
 	&& touch stamp-icons
 
-gtkbuiltincache.h: @REBUILD@ stamp-icons
+_disabled_gtkbuiltincache.h: @REBUILD@ stamp-icons
 	$(MAKE) $(AM_MAKEFLAGS) gtk-update-icon-cache$(EXEEXT)
 	$(gtk_update_icon_cache_program) --force --ignore-theme-index		\
 	   --include-image-data							\
diff -uprN a/gtk+-2.0.pc.in b/gtk+-2.0.pc.in
--- a/gtk+-2.0.pc.in	2020-12-18 14:29:40.000000000 +0900
+++ b/gtk+-2.0.pc.in	2022-10-02 18:26:04.556540100 +0900
@@ -11,5 +11,5 @@ Name: GTK+
 Description: GTK+ Graphical UI Library (${target} target)
 Version: @VERSION@
 Requires: gdk-${target}-2.0 @GTK_PACKAGES@
-Libs: -L${libdir} -lgtk-${target}-@GTK_API_VERSION@ @GTK_EXTRA_LIBS@
+Libs: -L${libdir} -lgtk-${target}-@GTK_API_VERSION@ @GTK_DEP_LIBS@ -lwinspool -lcomctl32 -lcomdlg32
 Cflags: -I${includedir}/gtk-2.0 @GTK_EXTRA_CFLAGS@
diff -uprN a/perf/marshalers.c b/perf/marshalers.c
--- a/perf/marshalers.c	2020-12-21 10:20:58.000000000 +0900
+++ b/perf/marshalers.c	2022-10-02 18:36:15.840632800 +0900
@@ -46,7 +46,7 @@
 #define g_marshal_value_peek_object(v)   (v)->data[0].v_pointer
 #define g_marshal_value_peek_variant(v)  (v)->data[0].v_pointer
 #endif /* !G_ENABLE_DEBUG */
-
+#if 0 /* delete _gtk_marshal_OBJECT__VOID for static build */
 /* OBJECT:VOID (./marshalers.list:1) */
 void
 _gtk_marshal_OBJECT__VOID (GClosure     *closure,
@@ -83,7 +83,7 @@ _gtk_marshal_OBJECT__VOID (GClosure
 
   g_value_take_object (return_value, v_return);
 }
-
+#endif
 /* VOID:ENUM,OBJECT,DOUBLE (./marshalers.list:2) */
 void
 _gtk_marshal_VOID__ENUM_OBJECT_DOUBLE (GClosure     *closure,
